"""empty message

Revision ID: fd9a741dd69c
Revises: b61994da2d38
Create Date: 2019-04-27 21:35:11.267632

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fd9a741dd69c'
down_revision = 'b61994da2d38'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('department',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('superior_category', sa.String(length=200), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('depot_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goods_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('superior_category', sa.String(length=200), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=10), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('standard',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('depot',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('area', sa.Integer(), nullable=True),
    sa.Column('contact', sa.String(length=200), nullable=True),
    sa.Column('telephone', sa.Integer(), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['depot_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('damaged',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('goods', sa.String(length=200), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('batch', sa.Integer(), nullable=True),
    sa.Column('standard', sa.String(length=200), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('depot', sa.String(length=200), nullable=True),
    sa.Column('type_io', sa.String(length=200), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('check', sa.String(length=200), nullable=True),
    sa.Column('check_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['user.id'], ),
    sa.ForeignKeyConstraint(['check'], ['user.id'], ),
    sa.ForeignKeyConstraint(['depot'], ['depot.id'], ),
    sa.ForeignKeyConstraint(['goods'], ['goods.id'], ),
    sa.ForeignKeyConstraint(['standard'], ['standard.id'], ),
    sa.ForeignKeyConstraint(['type_io'], ['type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deposit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('goods', sa.String(length=200), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('batch', sa.Integer(), nullable=True),
    sa.Column('standard', sa.String(length=200), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('depot', sa.String(length=200), nullable=True),
    sa.Column('type_io', sa.String(length=200), nullable=True),
    sa.Column('partner', sa.String(length=200), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('check', sa.String(length=200), nullable=True),
    sa.Column('check_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['user.id'], ),
    sa.ForeignKeyConstraint(['check'], ['user.id'], ),
    sa.ForeignKeyConstraint(['depot'], ['depot.id'], ),
    sa.ForeignKeyConstraint(['goods'], ['goods.id'], ),
    sa.ForeignKeyConstraint(['partner'], ['partner.id'], ),
    sa.ForeignKeyConstraint(['standard'], ['standard.id'], ),
    sa.ForeignKeyConstraint(['type_io'], ['type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('takeout',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('goods', sa.String(length=200), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('batch', sa.Integer(), nullable=True),
    sa.Column('standard', sa.String(length=200), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('depot', sa.String(length=200), nullable=True),
    sa.Column('type_io', sa.String(length=200), nullable=True),
    sa.Column('client', sa.String(length=200), nullable=True),
    sa.Column('express', sa.String(length=200), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('check', sa.String(length=200), nullable=True),
    sa.Column('check_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['user.id'], ),
    sa.ForeignKeyConstraint(['check'], ['user.id'], ),
    sa.ForeignKeyConstraint(['client'], ['client.id'], ),
    sa.ForeignKeyConstraint(['depot'], ['depot.id'], ),
    sa.ForeignKeyConstraint(['goods'], ['goods.id'], ),
    sa.ForeignKeyConstraint(['standard'], ['standard.id'], ),
    sa.ForeignKeyConstraint(['type_io'], ['type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('goods', sa.Column('category', sa.String(length=200), nullable=True))
    op.create_foreign_key(None, 'goods', 'standard', ['standard'], ['id'])
    op.create_foreign_key(None, 'goods', 'goods_category', ['category'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'goods', type_='foreignkey')
    op.drop_constraint(None, 'goods', type_='foreignkey')
    op.drop_column('goods', 'category')
    op.drop_table('takeout')
    op.drop_table('deposit')
    op.drop_table('damaged')
    op.drop_table('depot')
    op.drop_table('type')
    op.drop_table('standard')
    op.drop_table('role')
    op.drop_table('goods_category')
    op.drop_table('depot_category')
    op.drop_table('department')
    # ### end Alembic commands ###
